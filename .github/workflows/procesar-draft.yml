name: Procesar drafts -> noticias

on:
  push:
    branches: [ main ]
    paths:
      - 'drafts/**'

jobs:
  procesar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Process drafts into markdown and save images
        id: process_script
        run: |
          python3 - <<'PY'
          import os, json, base64, datetime, sys

          drafts_dir = "drafts"
          out_dir = "noticias"
          images_dir = "images"
          os.makedirs(out_dir, exist_ok=True)
          os.makedirs(images_dir, exist_ok=True)

          if not os.path.isdir(drafts_dir):
            print("No drafts/ folder found — nothing to process.")
            sys.exit(0)

          for fname in sorted(os.listdir(drafts_dir)):
            if not fname.endswith(".json"):
              continue
            path = os.path.join(drafts_dir, fname)
            print("Processing", path)
            with open(path, "r", encoding="utf-8") as f:
              data = json.load(f)

            title = data.get("title") or data.get("titulo") or "Sin título"
            date = data.get("date") or data.get("fecha") or datetime.date.today().isoformat()
            slug = data.get("slug") or os.path.splitext(fname)[0]
            markdown = data.get("markdown") or data.get("content") or data.get("contenido") or ""

            images = data.get("images") or data.get("imagenes") or []
            gallery = []

            for i, img in enumerate(images):
              if isinstance(img, dict):
                nombre = img.get("nombre") or img.get("name") or f"{slug}-{i+1}.jpg"
                b64 = img.get("contenido") or img.get("content")
                if not b64:
                  continue
                try:
                  data_bytes = base64.b64decode(b64)
                  out_path = os.path.join(images_dir, nombre)
                  with open(out_path, "wb") as out_f:
                    out_f.write(data_bytes)
                  gallery.append(nombre)
                except Exception as e:
                  print("Failed to write image", nombre, e)
              elif isinstance(img, str):
                gallery.append(img)
              else:
                continue

            fm_lines = [
              '---',
              f'title: "{title.replace(\'"\', "\\\\"")}"',
              f'date: "{date}"',
              'gallery:'
            ]
            for g in gallery:
              fm_lines.append(f'  - "{g}"')
            fm_lines.append('---')

            md_path = os.path.join(out_dir, f"{slug}.md")
            with open(md_path, "w", encoding="utf-8") as md_f:
              md_f.write("\n".join(fm_lines) + "\n\n" + markdown)

            os.remove(path)

          PY

      - name: Commit and push changes
        run: |
          git add noticias images drafts || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "ci: procesar drafts -> noticias"
            git push
          fi